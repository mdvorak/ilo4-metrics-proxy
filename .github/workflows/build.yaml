name: Build

on:
  push:
    branches:
      - "*"
    paths-ignore:
      - "*.md"
  pull_request:
    branches:
      - main
  release:
    types:
      - published

env:
  NAME: ilo4-metrics-exporter
  REGISTRY: quay.io
  IMAGE_REPOSITORY: quay.io/mdvorak/ilo4-metrics-exporter

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      value: ${{ steps.version.outputs.value }}
      is-release: ${{ steps.version.outputs.is-release }}
    steps:
      - name: Get the version
        id: version
        run: |
          if ${{ startsWith(github.ref, 'refs/tags/v') }}; then
            echo "::set-output name=value::${GITHUB_REF#refs/*/v}"
            echo "::set-output name=is-release::true"
          else
            echo "::set-output name=value::0.0.0-$(date +"%Y%m%d%H%M%S")-${GITHUB_SHA::8}"
            echo "::set-output name=is-release::false"
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ~1.15

      # Cache
      - name: Cache dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Get dependencies
        run: |
          go mod download

      # Test
      - name: Run tests
        run: |
          go test ./...

      # Lint helm
      - name: Helm lint
        run: helm lint "deploy/${NAME}"

  image:
    name: Build
    runs-on: ubuntu-latest
    needs: [ version, test ]
    env:
      VERSION: ${{ needs.version.outputs.value }}
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup
      - name: Login to quay.io
        run: sudo podman login --username '${{ secrets.REGISTRY_USERNAME }}' --password '${{ secrets.REGISTRY_PASSWORD }}' "${REGISTRY}"

      # Cache
      - name: Cache dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      # Build
      - name: Build image
        run: |
          QUAY_EXPIRES_AFTER=1h
          if ${{ needs.version.outputs.is-release }}; then
            QUAY_EXPIRES_AFTER=never
          fi

          sudo podman build . \
            -v ~/go/pkg/mod:/go/pkg/mod:rw \
            --label quay.expires-after="${QUAY_EXPIRES_AFTER}" \
            --label org.opencontainers.image.authors="${GITHUB_ACTOR}" \
            --label org.opencontainers.image.created="$(date --iso-8601=seconds)" \
            --label org.opencontainers.image.title="${IMAGE_REPOSITORY}" \
            --label org.opencontainers.image.source="https://github.com/${GITHUB_REPOSITORY}" \
            --label org.opencontainers.image.revision="${GITHUB_SHA}" \
            --label org.opencontainers.image.licenses="MIT" \
            --label org.opencontainers.image.description="Simple proxy, providing temperatures from HPE iLO 4 as Prometheus metrics." \
            -t "${IMAGE_REPOSITORY}:${VERSION}"

      - name: Push image
        run: sudo podman push "${IMAGE_REPOSITORY}:${VERSION}"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ version, test, image ]
    env:
      VERSION: ${{ needs.version.outputs.value }}
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0

      - name: Helm install
        run: |
          kubectl apply -f "deploy/${NAME}/ci/fake-secret.yaml"
          kubectl apply -f https://raw.githubusercontent.com/helm/charts/master/stable/prometheus-operator/crds/crd-servicemonitor.yaml
          helm install "${NAME}" "deploy/${NAME}/" --set image.tag="${VERSION}" --set serviceMonitor.enable="true"

      - name: Wait
        id: wait
        # NOTE tests started to fail randomly, due to service being unavailable, hence 1s hardcoded delay
        run: |
          kubectl wait --for=condition=available --timeout=30s "deployment/${NAME}"
          sleep 1
        continue-on-error: true

      - name: Print logs
        if: steps.wait.outcome == 'failure'
        run: |
          kubectl logs "deployment/${NAME}"

      - name: Helm test
        run: |
          helm test "${NAME}" --logs
          kubectl logs "deployment/${NAME}"

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ version, test, image, deploy ] # Don't publish if test fails
    env:
      VERSION: ${{ needs.version.outputs.value }}
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Release Helm
      - name: Publish Helm chart
        uses: stefanprodan/helm-gh-pages@v1.4.1
        with:
          token: ${{ github.token }}
          charts_dir: deploy
          chart_version: ${{ env.VERSION }}
          app_version: ${{ env.VERSION }}
